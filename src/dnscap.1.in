.Dd July 8, 2019
.Dt DNSCAP 1
.Os
.Sh NAME
.Nm dnscap
.Nd DNS network traffic capture utility
.Sh SYNOPSIS
.Nm
.Op Fl ?VbNpd1g6fTIySMD
.Op Fl o Ar option=value
.Op Fl i Ar if ...
.Op Fl r Ar file ...
.Op Fl l Ar vlan ...
.Op Fl L Ar vlan ...
.Op Fl u Ar port
.Oo
.Fl m
.Op qun
.Oc
.Oo
.Fl e
.Op nytfsxirMD
.Oc
.Oo
.Fl h
.Op ir
.Oc
.Oo
.Fl s
.Op ir
.Oc
.Op Fl a Ar host ...
.Op Fl z Ar host ...
.Op Fl A Ar host ...
.Op Fl Z Ar host ...
.Op Fl Y Ar host ...
.Oo
.Fl w
.Ar base
.Op Fl W Ar suffix
.Op Fl k Ar cmd
.Oc
.Op Fl t Ar lim
.Op Fl c Ar lim
.Op Fl C Ar lim
.Op Fl x Ar pat ...
.Op Fl X Ar pat ...
.Op Fl B Ar datetime
.Op Fl E Ar datetime
.Op Fl U Ar str
.Op Fl P Ar plugin.so ...
.Sh DESCRIPTION
.Nm
is a network capture utility designed specifically for DNS traffic.  It
normally produces binary data in
.Xr pcap 3
format, either on standard output or in successive dump files
(based on the
.Fl w
command line option).  This utility is similar to
.Xr tcpdump 1 ,
but has finer grained packet recognition tailored to DNS transactions and
protocol options.
.Nm
is expected to be used for gathering continuous research or audit traces.
.Pp
The following options are available:
.Bl -tag -width 10n
.It Fl ?
Prints some text to stdout describing the command line options, so that you
won't have to refer back to this man page as often.  Probably you will have
to say "-\\?" to get this option past your shell.
.It Fl V
Print version and exit.
.It Fl o
See EXTENDED OPTIONS.
.It Fl b
Run in background as daemon.
.It Fl N
Do not attempt to drop privileges, this is implicit if only reading
offline pcap files.
.It Fl p
Asks that the interface not be put into promiscuous mode.  Note that even
without this option, the interface could be in promiscuous mode for some other
reason.
.It Fl d
Tells a verbose story of options and patterns chosen, files opened, and so on.
(Multiple
.Fl d
options can be given to increase verbosity and frequency of trace messages.)
.It Fl 1
Flush the
.Xr pcap 3
packet dump after every packet.  Mostly this is useful when the
packet dump is standard output, and has been piped to
.Xr tcpdump 1 .
.It Fl g
Produce output on diagnostic output, showing the presentation form of DNS
messages which passed through all of the filters.  If
.Fl w
is also used, then every message will be dumped in both binary and
presentation form.
.It Fl 6
Suppress the use of packet filter patterns that are known (as of 2007) to
cause problems when processing IPv6 packets.  Recommended when IPv6 traffic is
expected to be present.
.It Fl f
Selects fragments (which could include unrelated flows since fragments do not
contain port numbers), and includes fragments in the binary output.  Necessary
if you intend to do IP Reassembly.  Note that all fragments will be collected,
not just those using the DNS port number, since fragments don't have port
numbers.  Beware this option if you also handle a lot of NFS traffic.
.It Fl T
Selects TCP packets.
SYN, FIN, and RST packets are collected if they pass the layer 2, port, and
host filters (although hosts need not be in the correct direction); they are
not tested against filter options that require a DNS header such as
.Fl m ,
.Fl s ,
and
.Fl e .
All DNS messages in the stream is captured if it passes all filter options.

Each TCP packet with payload will be tagged as DNS, unless
.Fl o Ar reassemble_tcp=yes
is used, with the support of having the DNS length arrive before the message
in an own packet.
Ongoing TCP connections can be inspected by using extended option
.Fl o Ar parse_ongoing_tcp=yes .
TCP packets are processed as they arrive so missing, unaligned data or DNS
message split over multiple packets will produce parsing errors.
Using extended option
.Fl o Ar allow_reset_tcpstate=yes
may allow
.Nm
to recover from these scenarios.
.It Fl I
Select ICMP and ICMPv6 packets.
.It Fl i Ar if
Select an interface to be monitored.  On BSD systems, the default is the first
interface that was configured at system boot time.  On Linux systems, the
default is to monitor all interfaces.  More than one interface may be selected
which will cause output to be interleaved from all selected interfaces.
.It Fl r Ar file
Select an offline
.Xr pcap 3
file produced by this utility or by
.Xr tcpdump 1
as the input packet source.  Can be given as "-" to indicate standard input.
.It Fl l Ar vlan
Captures only 802.1Q encapsulated packets, and selects specific vlans to be
monitored.  Can be specified more than once to select multiple vlans.
.Fl l Ar 4095
means "all vlans".
.It Fl L Ar vlan
Captures 802.1Q encapsulated packets matching the specified vlans AND
packets without VLAN tags. Can be specified more than one to select
multiple vlans.
.Fl L Ar 4095
means "all vlans".
.It Fl u Ar port
Capture only packets on this UDP port, and treat as DNS traffic.  The default
port is 53.  Note that there is no way to select multiple UDP ports, as would
be necessary to capture both DNS (port 53) and mDNS (port 5353) traffic.
.It Fl m Op qun
Capture only messages of designated types (query, update, and notify).
Default is query.
.It Fl e Op nytfsxir
Among responses, consider nonzero DNS TC or DNS RCODE to indicate an error,
and select only responses which do not have (n), or which have (y), these
conditions.  The default is to only select nonerrors among responses.  If
both nonerror and error responses are to be selected, specify both the
.Ar n
and
.Ar y
options here.
To be more specific, use one or more condition-specific options, as follows:
.sp
.Bl -tag -width indent -offset indent -compact
.It Va n
no error
.It Va y
some error
.It Va t
truncated response (TC bit)
.It Va f
format error (rcode 1)
.It Va s
server failure (rcode 2)
.It Va x
no such name (rcode 3)
.It Va i
not implemented (rcode 4)
.It Va r
refusal (rcode 5)
.El
.It Fl h Op ir
Hide initiator or responder of each captured transaction.  Hiding an initiator
means wiping out the address and port number.  Hiding a responder means to wipe
out the address only.  This wiping occurs on the copy of the packet sent to the
.Xr pcap 3
dump output, and both the IP and UDP checksums will be recomputed in that case.
.It Fl s Op ir
Select messages which are initiations and/or responses.  Default is both.
.It Fl a Ar host
Capture only transactions having these initiators.  Can be specified more than
once to select multiple initiators.  If a host name is used, then all of that
host's addresses whether IPv4 or IPv6 are added to the recognition pattern.
.It Fl z Ar host
Capture only transactions having these responders.  Can be specified more than
once to select multiple responders.  If a host name is used, then all of that
host's addresses whether IPv4 or IPv6 are added to the recognition pattern.
.It Fl A Ar host
Capture only transactions NOT having these initiators.
.It Fl Z Ar host
Capture only transactions NOT having these responders.
.It Fl Y Ar host
Drop responses having these responders.  Similar to
.Fl Z
in spirit.  However,
.Fl Y
applies only to responses and does not cause any additions to the BPF filter
string.
.It Fl w Ar base
Dump the captured packets to successive binary files in
.Xr pcap 3
format with DLT_RAW datalink type.
Each file will have a name like "%s.%s.%06u" where the first %s is
.Ar base ,
second %s is the time as hours, minutes and seconds (%H%M%S), and %06u is
the microseconds.
The argument "-" may be given to send the binary output to standard output.
In that case, the
.Fl c
and
.Fl t
options affect the total duration of the capture, and not merely the size and
time limits of each individual dump file.
.It Fl W Ar suffix
The provided suffix is added to the dump file name, e. g.: ".pcap".  If the
suffix ends with ".gz" then files will be automatically gzip compressed.  If
gzip compression is requested but not supported (i.e. because of lack of
system support) an error will be generated.
.It Fl k Ar cmd
After each dump file specified by
.Fl w
is closed, this command will be executed in a nonblocking subprocess with the
file name as its one argument.  It's expected that this command will be a shell
script that submits the finished file to a batch processing analytics system.
Note that without
.Fl k ,
the program will exit at the first output closure due to
.Fl c
or
.Fl t .
.It Fl t Ar lim
By default,
.Nm
will close its packet dump file only when interrupted.  A time limit can be
specified with the
.Fl t
option.
When writing to a file, the packet dump file will be closed when time() %
.Ar lim
is zero and the first file will usually be shorter than
.Ar lim
seconds.
If the packet dump file is standard output, then after closing this
file,
.Nm
exits.  This option is inclusive with
.Fl c .
.It Fl c Ar lim
By default,
.Nm
will close its packet dump file only when interrupted.  A dump file size,
measured in packets, can be specified with the
.Fl c
option.  If the packet dump file is standard output, then after closing this
file,
.Nm
exits.  This option is inclusive with
.Fl t .
.It Fl C Ar lim
By default,
.Nm
will close its packet dump file only when interrupted.  A dump file size,
measured in bytes captured, can be specified with the
.Fl C
option.  If the packet dump file is standard output, then after closing this
file,
.Nm
exits.  This option is inclusive with
.Fl t .
.It Fl x Ar pat
If one or more
.Fl x
options are provided, then DNS messages will only be selected if the
printable representation of the QNAME or any RR matches at least one of the
provided
.Ar pat
patterns.  For negative matching see
.Fl X
below.  See
.Xr regex 3
and
.Xr re_format 7
for more information about extended regular expression syntax.
.It Fl X Ar pat
If one or more
.Fl X
options are provided, then DNS messages matching these patterns will not
be selected.  See also the description of
.Fl x
above.  If both options are used then the message must first be matched by
.Fl x
and then not matched by all
.Fl X
regex.
.It Fl y
Enable Linux seccomp-bpf sandbox if available (compile option).
.It Fl S
Causes
.Nm
to print pcap_stats() counters on stderr when
.Fl t
,
.Fl c
or
.Fl C
limits are reached.
.It Fl B Ar datetime
Tell
.Nm
to start collecting at a specific time.
.Ar datetime
should be specified as YYYY-MM-DD HH:MM:SS.  The program will
.Xr sleep 3
until the start time, or it will skip all packets related to an earlier
time if used with an offline
.Xr pcap 3
file, and then begin capturing packets.
.It Fl E Ar datetime
Tell
.Nm
to stop collecting at a specific time.
.Ar datetime
should be specified as YYYY-MM-DD HH:MM:SS.  The program will exit
when it sees a packet (live or offline
.Xr pcap 3
file) with timestamp greater than
.Ar datetime .
.It Fl M
Enable monitor mode on interfaces.
.It Fl D
Enable immediate mode on interfaces.
.It Fl U Ar str
Append "and
.Ar str
" to the pcap filter.
.It Fl P Ar plugin.so ...
Load and use the specified plugin. Any options given after this are
sent to the plugin.
.El
.Pp
If started with no options,
.Nm
will exit with a complaint that without either the
.Fl w
or
.Fl g
options, it's pointless to run the program at all.  In its simplest form,
the output can be piped to
.Xr tcpdump 1
as in:
.Bd -literal -offset indent
dnscap -w - | tcpdump -r -
.Ed
.Pp
You can safely add the
.Fl d
option since the output resulting from
.Fl d
goes to diagnostic output rather than standard output.  And since everybody
who's anybody always uses the
.Fl n
option to
.Xr tcpdump 1 ,
the minimum useful incantation is probably:
.Bd -literal -offset indent
dnscap -w - | tcpdump -r - -n
.Ed
.Pp
The more interesting use for
.Nm
is long term or continuous data collection.  Assuming a shell script called
.Ar dnscap-upload
whose function is to transfer a
.Xr pcap 3 -
format file to an analytics system and then remove the local copy of it, then
a name server operating system startup could invoke
.Nm
for continuous DNS auditing using a command like:
.Bd -literal -offset indent
dnscap -m qun -h i -r f.root-servers.net \\
       -b /var/local/dnscaps/f-root -t 1800 \\
       -k /usr/local/sbin/dnscap-upload
.Ed
.Pp
A bizarre but actual example which combines almost all features of
.Nm
is:
.Bd -literal -offset indent
dnscap -d -w - -1 -i em0 -l 0 -x ^7 | \\
       dnscap -d -r - -X spamhaus -g -l 0
.Ed
.Pp
Here, we're looking for all messages having a QNAME or RR beginning with the
decimal digit "7", but we don't want to see anything containing "spamhaus".
The interface is tagged, and since only one interface is selected, the output
stream from the first
.Nm
will also be tagged, thus we need
.Fl l Ar 0
on both
.Nm
commands.
.Sh EXTENDED OPTIONS
The following extended options exists and some of them might also exist
as a short option.
.Bl -tag -width 10n
.It cbor_chunk_size=<bytes>
Specify the number of bytes of CBOR to construct before flushing the output,
must be a non zero positive number.
.It cds_cbor_size=<bytes>
Number of bytes of memory to use before flushing to file.
.It cds_message_size=<bytes>
Number of bytes of memory to use for each DNS packet.
.It cds_max_rlabels=<num>
Number of labels to keep in the reverse label index.
.It cds_min_rlabel_size=<num>
The minimum size of a label to be able to use the reverse label index.
.It cds_use_rdata_index=yes
Use the resource data index, default no.
.It cds_rdata_index_min_size=<num>
The minimum size of the data to be able to use the resource data index.
.It cds_use_rdata_rindex=yes
Use the resource data reverse index, default no.
.It cds_rdata_rindex_size=<num>
Number of resource data to keep in the resource data reverse index.
.It cds_rdata_rindex_min_size=<num>
The minimum size of the data to be able to use the resource data reverse index.
.It dump_format=<format>
Specify the output format to use, see OUTPUT FORMATS.
.It user=<user>
Specify the user to drop privileges to (default nobody).
.It group=<group>
Specify the group to drop privileges to (default nobody).
.It pcap_buffer_size=<num>
Set the
.Xr pcap 3pcap
buffer size to use when capturing packets, can be used too not miss packets
during processing.
.It use_layers=yes
Enable pcap-thread layers, this will let pcap-thread parse the network layers
and call back with UDP, TCP or ICMP traffic.
.It defrag_ipv4=yes
Enable IPv4 defragmentation in pcap-thread, requires
.Ar use_layers=yes .
.It max_ipv4_fragments=<num>
Set the maximum fragmented IPv4 packets to track for reassembly, if the limit
is reach then all other fragmented packets will not be reassembled.
.It max_ipv4_fragments_per_packet=<num>
Set the maximum fragments per tracked IPv4 packet to keep for reassembly.
.It defrag_ipv6=yes
Enable IPv6 defragmentation in pcap-thread, requires
.Ar use_layers=yes .
.It max_ipv6_fragments=<num>
Set the maximum fragmented IPv6 packets to track for reassembly, if the limit
is reach then all other fragmented packets will not be reassembled.
.It max_ipv6_fragments_per_packet=<num>
Set the maximum fragments per tracked IPv6 packet to keep for reassembly.
.It parse_ongoing_tcp=yes
Enable state tracking when a new TCP stream is found but no SYN/ACK has been
seen.
Each TCP packet with payload will be tagged as DNS.
.It allow_reset_tcpstate=yes
Allow the TCP state to be reseted, this is used in diagnostic output and
plugins when parsing the DNS in a TCP packet fails to try and recover from
missing or unaligned data.
.It reassemble_tcp=yes
Enable reassembly of TCP packets, this will not parse each packet as an own
DNS message but will store TCP segments until they can be reassembled.
It will expect the DNS message length to come first and then wait for the
full length of data to arrive until passing to outputs and plugins.
Since the number of saved segments are limited and fixed, if the TCP steam
becomes corrupt then processing may stop.
Recovering from this can be done by enabling
.Ar allow_reset_tcpstate=yes
which will reset state and free all saved segments to try and start over.
.It reassemble_tcp_faultreset=<num>
This controls the number of faults that can happen before the state is
reseted (as described above), faults are if the segments buffer are full or
if the sequence is outside the TCP window.
The default is zero which means it will reset the state as soon as the
segment buffer is full.
.It reassemble_tcp_bfbparsedns=yes
Enable an experimental additional layer of reassemble that uses libbind to
parse the payload before accepting it.
If the DNS is invalid it will move 2 bytes within the payload and treat it
as a new payload, taking the DNS length again and restart the process.
Requires that
.Nm
was compiled with libbind and
.Ar reassemble_tcp=yes .
.It bpf_hosts_apply_all=yes
This changes the BPF generation so that any host restriction will come
after ICMP, fragments, ports or DNS section to allow it to apply for ICMP
and fragments also.
The default behavior is to only apply hosts to the ports or DNS section.
.El
.Sh OUTPUT FORMATS
The following output format are supported:
.Bl -tag -width 10n
.It cbor
Uses tinycbor library to write CBOR objects that are based on DNS-in-JSON
draft by Paul Hoffman.
.It cds
CBOR DNS Stream format.
.It pcap
This uses the pcap library to output the captured DNS packets.
.It diagnostic
This is the output produced by
.Fl g
, a backslash at the end indicates that the line continues on the next.
First line contains packet and capturing information:
.Bd -literal -offset indent
[<pktsize>] <date> <timestamp> [<pktnum> <file|interface> <vlanid>]
.Ed
.Pp
Second line shows IP information or if the packet is a fragment:
.Bd -literal -offset indent
[<srcip>].<srcport> -> [<dstip>].<dstport>
.Ed
.Pp
.Bd -literal -offset indent
;: [<srcip>] -> [<dstip>] (frag)
.Ed
.Pp
If the packet contains DNS information then the next line will show the DNS
header information:
.Bd -literal -offset indent
dns <opcode>,<rcode>,<id>,<flags>
.Ed
.Pp
Next are the 4 sections of the DNS, each section is prefixed by the number
of records and each record and section are separated by space.
Below are a few example, first is just a query, second has just one answer
and the last has also authority and additional records.
.Bd -literal -offset indent
1 example.com,IN,A 0 0 0
.Ed
.Pp
.Bd -literal -offset indent
1 example.com,IN,A \\
1 example.com,IN,A,47,127.0.0.1 0 0
.Ed
.Pp
.Bd -literal -offset indent
1 example.com,IN,A \\
1 example.com,IN,A,263,127.0.0.1 \\
4 example.com,IN,NS,157794,ns1.example.com \\
example.com,IN,NS,157794,ns4.example.com \\
example.com,IN,NS,157794,ns3.example.com \\
example.com,IN,NS,157794,ns2.example.com \\
4 ns2.example.com,IN,A,157794,127.0.0.1 \\
ns1.example.com,IN,A,331796,127.0.0.1 \\
ns3.example.com,IN,A,157794,127.0.0.1 \\
ns4.example.com,IN,A,157794,127.0.0.1
.Ed
.Pp
Each DNS record contains the following:
.Bd -literal -offset indent
<fqdn>,<class>,<type>[,<ttl>[,<additional information>]]
.Ed
.Pp
Additional information will be displayed for SOA, A, AAAA, MX, NS, PTR,
CNAME and OPT records containing EDNS0.
.El
.Sh PLUGINS
.Nm
comes bundled with a set of plugins, see
.Fl P
option and the plugins help page.
.Bd -literal -offset indent
dnscap -P @pkglibdir@/<plugin>.so -?
.Ed
.Pp
This list of plugins are installed in @pkglibdir@:
.Bl -tag -width 10n
.It anonaes128.so
Anonymize IP addresses using AES128.
.It anonmask.so
Pseudo-anonymize IP addresses by masking them.
.It cryptopan.so
Anonymize IP addresses using an extension to Crypto-PAn (College of
Computing, Georgia Tech) made by David Stott (Lucent).
.It cryptopant.so
Anonymize IP addresses using cryptopANT, a different implementation of
Crypto-PAn made by the ANT project at USC/ISI.
.It eventlog.so
Output DNS activity as log events, including IP addresses from query responses.
.It ipcrypt.so
Anonymize IP addresses using ipcrypt create by Jean-Philippe Aumasson.
.It pcapdump.so
Dump DNS into a PCAP with some filtering options.
.It royparse.so
Splits a PCAP into two streams; queries in PCAP format and responses in
ASCII format.
.It rssm.so
Root Server Scaling Measurement plugin.
.It rzkeychange.so
RFC8145 key tag signal collection and reporting plugin.
.It txtout.so
Dump DNS as one-line text.
.El
.Sh "COMPATIBILITY NOTES"
If
.Nm dnscap
produces no output, it's probably due to some kind of bug in the kernel's
.Xr bpf 4
module or in the
.Xr pcap 3
library.  You may need the
.Fl 6
,
.Fl l Ar 0
,
.Fl l Ar 4095
or
.Fl L Ar 4095
options.  To diagnose "no output", use the
.Fl d
and
.Fl g
options to find out what BPF program is being internally generated, and
then cut/paste this BPF program onto a
.Xr tcpdump 1
command line to see if it likewise produces no output.
You can also run
.Xr tcpdump 1
with
.Fl e
to see the link-level headers in order to see if the traffic is encapsulated.
.Sh DIAGNOSTICS
.Ex -std
.Sh SEE ALSO
.Xr tcpdump 1 ,
.Xr pcap 3 ,
.Xr bpf 4
.Sh AUTHORS
Maintained by DNS-OARC
.Bd -literal -offset indent
https://www.dns-oarc.net/
.Ed
.Pp
For issues and feature requests please use:
.Bd -literal -offset indent
@PACKAGE_URL@
.Ed
.Pp
For question and help please use:
.Bd -literal -offset indent
@PACKAGE_BUGREPORT@
.Ed
.Sh HISTORY
.Nm
was written by Paul Vixie (ISC) with help from Duane Wessels,
Kevin Brintnall, and others too numerous to mention.
.Sh LICENSE
Copyright (c) 2016-2020, OARC, Inc.
All rights reserved.
.Pp
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
.Pp
1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
.Pp
2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.
.Pp
3. Neither the name of the copyright holder nor the names of its
   contributors may be used to endorse or promote products derived
   from this software without specific prior written permission.
.Pp
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
